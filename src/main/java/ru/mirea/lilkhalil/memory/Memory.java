package ru.mirea.lilkhalil.memory;

/**
 * Интерфейс {@code Memory} предоставляет методы для взаимодействия с системой памяти
 * посредством чтения и записи целочисленных значений по указанным адресам.
 * <p>
 * Реализации этого интерфейса могут представлять различные типы памяти,
 * такие как основная память процессора, кэш или виртуальная память.
 * </p>
 */
public interface Memory {
    /**
     * Читает целочисленное значение из указанного адреса памяти.
     *
     * @param address адрес памяти, из которого необходимо прочитать значение
     * @return целочисленное значение, хранящееся по указанному адресу
     */
    int read(int address);

    /**
     * Записывает целочисленное значение по указанному адресу памяти.
     *
     * @param address адрес памяти, в который необходимо записать значение
     * @param value   целочисленное значение, которое нужно записать по указанному адресу
     */
    void write(int address, int value);

    /**
     * Загружает данные в память из указанного файла.
     * Данные записываются в память с учетом адресов, указанных в файле.
     * Пустая строка в файле разделяет секции данных и команд.
     *
     * @param fileName имя файла для загрузки данных в память
     */
    void load(String fileName);
}
